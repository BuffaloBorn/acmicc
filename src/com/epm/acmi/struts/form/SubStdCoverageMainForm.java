/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.epm.acmi.struts.form;


import java.util.TreeMap;

import org.apache.struts.action.ActionForm;

import com.cc.framework.adapter.struts.FormActionContext;
import com.epm.acmi.util.ACMICache;
import com.cc.acmi.common.FieldCheckCustom;

/** 
 * MyEclipse Struts
 * Creation date: 04-08-2008
 * 
 * XDoclet definition:
 * @struts.form name="subStdCoverageMainForm"
 */
public class SubStdCoverageMainForm extends ActionForm 
{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private String USER_ID;

	private String POLICY_ID;

	private String PERSON_ID;

	private String COVERAGE_CODE;

	private String SUB_STANDARD_RISK_CODE="";

	private String SS_CCODE_TIME_PERIOD;

	private String CONDITION_CODEONE;

	private String CONDITION_CODETWO;

	private String CONDITION_CODETHREE;

	private String CONDITION_CODEFOUR;

	private String CONDITION_TEXTONE;

	private String CONDITION_TEXTTWO;

	private String CONDITION_TEXTTHREE;

	private String CONDITION_TEXTFOUR;

	private String SUB_EFF_DATE;

	private String POLICY_STATUS;

	private String PERSON_STATUS;

	private String STATUS_EFF_DATE;

	private String PERSON_STATUS_EFF_DATE;

	private String PERSON_NAME;

	private String NEXT_DUE_DATE;

	private String DISPLAY_DATE;

	private String SUB_EXT_DATE;

	private String REQ_EFF_DATE;

	private String MODE;

	private String POLICY_ISSUED;
	
	private String currentPosition;

	public TreeMap getSubstdreasoncodeOptions()
	{
		
		//TreeMap status = new TreeMap();
			
        
		/*BAND0.85   INDIVIDUAL HEALTH + .85 BAND FACTOR  
		BAND0.90   INDIVIDUAL HEALTH + .90 BAND FACTOR  
		BAND0.95   INDIVIDUAL HEALTH + .95 BAND FACTOR  
		BAND1.05   INDIVIDUAL HEALTH + 1.05 BAND FACTOR 
		BAND1.10   INDIVIDUAL HEALTH + 1.10 BAND FACTOR 
		BAND1.15   INDIVIDUAL HEALTH + 1.15 BAND FACTOR 
		BAND1.20   INDIVIDUAL HEALTH + 1.20 BAND FACTOR */
		
//		status.put("BAND0.85", "BAND0.85: INDIVIDUAL HEALTH + .85 BAND FACTOR");
//		status.put("BAND0.90", "BAND0.90: INDIVIDUAL HEALTH + .90 BAND FACTOR ");
//		status.put("BAND0.95", "BAND0.95: INDIVIDUAL HEALTH + .95 BAND FACTOR  ");
//		status.put("BAND1.05", "BAND1.05: INDIVIDUAL HEALTH + 1.05 BAND FACTOR");
//		status.put("BAND1.10", "BAND1.10: INDIVIDUAL HEALTH + 1.10 BAND FACTOR");
//		status.put("BAND1.15", "BAND1.15: INDIVIDUAL HEALTH + 1.15 BAND FACTOR");
//		status.put("BAND1.20", "BAND1.20: INDIVIDUAL HEALTH + 1.20 BAND FACTOR");
		
		return ACMICache.getSubStandardReasons();
		
	}
	 
	public TreeMap getCondictionCodesOptions()
	{
		
		//TreeMap status = new TreeMap();
			
/*		 ALC/DRUG  ALCOHOL AND/OR DRUG   
		 ALLG      ALLERGIES             
		 ANEM      ANEMIA                
		 APNEA     SLEEP APNEA           
		 ARTH      ARTHRITIS             
		 AST/ALLG  ASTHMA AND ALLERGIES  
		 ASTH      ASTHMA  */   
		
//		status.put("ALC/DRUG", "ALC/DRUG: ALCOHOL AND/OR DRUG");
//		status.put("ALLG", "ALLG: ALLERGIES");
//		status.put("ANEM", "ANEM: ANEMIA");
//		status.put("APNEA", "APNEA: SLEEP APNEA");
//		status.put("ARTH", "ARTH: ARTHRITIS");
//		status.put("AST/ALLG", "AST/ALLG: ASTHMA AND ALLERGIES");
//		status.put("ASTH", "ASTH: ASTHMA");
		
		return ACMICache.getConditionCodes();
		
	}	
	
	
	public String getUSER_ID() {
		return USER_ID;
	}




	public void setUSER_ID(String user_id) {
		USER_ID = user_id;
	}




	public String getPOLICY_ID() {
		return POLICY_ID;
	}




	public void setPOLICY_ID(String policy_id) {
		POLICY_ID = policy_id;
	}




	public String getPERSON_ID() {
		return PERSON_ID;
	}




	public void setPERSON_ID(String person_id) {
		PERSON_ID = person_id;
	}




	public String getCOVERAGE_CODE() {
		return COVERAGE_CODE;
	}




	public void setCOVERAGE_CODE(String coverage_code) {
		COVERAGE_CODE = coverage_code;
	}




	public String getSUB_STANDARD_RISK_CODE() 
	{
	   char charAtI;
	   int chType; 
	   int length = this.SUB_STANDARD_RISK_CODE.trim().length();
	    
	   if (length == 2)
	   {
	    	charAtI = this.SUB_STANDARD_RISK_CODE.charAt(0);
	    	
	    	chType = Character.getType(charAtI);
	    	
	    	if(chType == 1)
	    	{
	    		this.setSUB_STANDARD_RISK_CODE("");
	    	}
		}
	   else
		this.setSUB_STANDARD_RISK_CODE(this.SUB_STANDARD_RISK_CODE);
		   
		   
		return SUB_STANDARD_RISK_CODE;
	}




	public void setSUB_STANDARD_RISK_CODE(String sub_standard_risk_code)
	{
		SUB_STANDARD_RISK_CODE = sub_standard_risk_code;
	}




	public String getSS_CCODE_TIME_PERIOD() {
		return SS_CCODE_TIME_PERIOD;
	}




	public void setSS_CCODE_TIME_PERIOD(String ss_ccode_time_period) {
		SS_CCODE_TIME_PERIOD = ss_ccode_time_period;
	}




	public String getCONDITION_CODEONE() {
		return CONDITION_CODEONE;
	}




	public void setCONDITION_CODEONE(String condition_codeone) {
		CONDITION_CODEONE = condition_codeone;
	}




	public String getCONDITION_CODETWO() {
		return CONDITION_CODETWO;
	}




	public void setCONDITION_CODETWO(String condition_codetwo) {
		CONDITION_CODETWO = condition_codetwo;
	}




	public String getCONDITION_CODETHREE() {
		return CONDITION_CODETHREE;
	}




	public void setCONDITION_CODETHREE(String condition_codethree) {
		CONDITION_CODETHREE = condition_codethree;
	}




	public String getCONDITION_CODEFOUR() {
		return CONDITION_CODEFOUR;
	}




	public void setCONDITION_CODEFOUR(String condition_codefour) {
		CONDITION_CODEFOUR = condition_codefour;
	}




	public String getCONDITION_TEXTONE() {
		return CONDITION_TEXTONE;
	}




	public void setCONDITION_TEXTONE(String condition_textone) {
		CONDITION_TEXTONE = condition_textone;
	}




	public String getCONDITION_TEXTTWO() {
		return CONDITION_TEXTTWO;
	}




	public void setCONDITION_TEXTTWO(String condition_texttwo) {
		CONDITION_TEXTTWO = condition_texttwo;
	}




	public String getCONDITION_TEXTTHREE() {
		return CONDITION_TEXTTHREE;
	}




	public void setCONDITION_TEXTTHREE(String condition_textthree) {
		CONDITION_TEXTTHREE = condition_textthree;
	}




	public String getCONDITION_TEXTFOUR() {
		return CONDITION_TEXTFOUR;
	}




	public void setCONDITION_TEXTFOUR(String condition_textfour) {
		CONDITION_TEXTFOUR = condition_textfour;
	}




	public String getSUB_EFF_DATE() {
		return SUB_EFF_DATE;
	}




	public void setSUB_EFF_DATE(String sub_eff_date) {
		SUB_EFF_DATE = sub_eff_date;
	}




	public String getPOLICY_STATUS() {
		return POLICY_STATUS;
	}




	public void setPOLICY_STATUS(String policy_status) {
		POLICY_STATUS = policy_status;
	}




	public String getPERSON_STATUS() {
		return PERSON_STATUS;
	}




	public void setPERSON_STATUS(String person_status) {
		PERSON_STATUS = person_status;
	}




	public String getSTATUS_EFF_DATE() {
		return STATUS_EFF_DATE;
	}




	public void setSTATUS_EFF_DATE(String status_eff_date) {
		STATUS_EFF_DATE = status_eff_date;
	}




	public String getPERSON_STATUS_EFF_DATE() {
		return PERSON_STATUS_EFF_DATE;
	}




	public void setPERSON_STATUS_EFF_DATE(String person_status_eff_date) {
		PERSON_STATUS_EFF_DATE = person_status_eff_date;
	}




	public String getPERSON_NAME() {
		return PERSON_NAME;
	}




	public void setPERSON_NAME(String person_name) {
		PERSON_NAME = person_name;
	}




	public String getNEXT_DUE_DATE() {
		return NEXT_DUE_DATE;
	}




	public void setNEXT_DUE_DATE(String next_due_date) {
		NEXT_DUE_DATE = next_due_date;
	}




	public String getDISPLAY_DATE() {
		return DISPLAY_DATE;
	}




	public void setDISPLAY_DATE(String display_date) {
		DISPLAY_DATE = display_date;
	}




	public String getSUB_EXT_DATE() {
		return SUB_EXT_DATE;
	}




	public void setSUB_EXT_DATE(String sub_ext_date) {
		SUB_EXT_DATE = sub_ext_date;
	}




	public String getREQ_EFF_DATE() {
		return REQ_EFF_DATE;
	}




	public void setREQ_EFF_DATE(String req_eff_date) {
		REQ_EFF_DATE = req_eff_date;
	}




	public String getMODE() {
		return MODE;
	}




	public void setMODE(String mode) {
		MODE = mode;
	}




	public String getPOLICY_ISSUED() {
		return POLICY_ISSUED;
	}




	public void setPOLICY_ISSUED(String policy_issued) {
		POLICY_ISSUED = policy_issued;
	}




	public void clear()
	{
	
		setUSER_ID("");
	
		setPOLICY_ID("");
	
		setPERSON_ID("");
	
		setCOVERAGE_CODE("");
	
		setSUB_STANDARD_RISK_CODE("");
	
		setSS_CCODE_TIME_PERIOD("");
	
		setCONDITION_CODEONE("");
	
		setCONDITION_CODETWO("");
	
		setCONDITION_CODETHREE("");
	
		setCONDITION_CODEFOUR("");
	
		setCONDITION_TEXTONE("");
	
		setCONDITION_TEXTTWO("");
	
		setCONDITION_TEXTTHREE("");
	
		setCONDITION_TEXTFOUR("");
	
		setSUB_EFF_DATE("");
	
		setPOLICY_STATUS("");
	
		setPERSON_STATUS("");
	
		setSTATUS_EFF_DATE("");
	
		setPERSON_STATUS_EFF_DATE("");
	
		setPERSON_NAME("");
	
		setNEXT_DUE_DATE("");
	
		setDISPLAY_DATE("");
	
		setSUB_EXT_DATE("");
	
		setREQ_EFF_DATE("");
	
		setMODE("");
	
		setPOLICY_ISSUED("");
	
	}


	public void save() 
	{
		setUSER_ID(getUSER_ID());
		
		setPOLICY_ID(getPOLICY_ID());
	
		setPERSON_ID(getPERSON_ID());
	
		setCOVERAGE_CODE(getCOVERAGE_CODE());
	
		setSUB_STANDARD_RISK_CODE(getSUB_STANDARD_RISK_CODE());
	
		setSS_CCODE_TIME_PERIOD(getSS_CCODE_TIME_PERIOD());
	
		setCONDITION_CODEONE(getCONDITION_CODEONE());
	
		setCONDITION_CODETWO(getCONDITION_CODETWO());
	
		setCONDITION_CODETHREE(getCONDITION_CODETHREE());
	
		setCONDITION_CODEFOUR(getCONDITION_CODEFOUR());
	
		setCONDITION_TEXTONE(getCONDITION_TEXTONE());
	
		setCONDITION_TEXTTWO(getCONDITION_TEXTTWO());
	
		setCONDITION_TEXTTHREE(getCONDITION_TEXTTHREE());
	
		setCONDITION_TEXTFOUR(getCONDITION_TEXTFOUR());
	
		setSUB_EFF_DATE(getSUB_EFF_DATE());
	
		setPOLICY_STATUS(getPOLICY_STATUS());
	
		setPERSON_STATUS(getPERSON_STATUS());
	
		setSTATUS_EFF_DATE(getSTATUS_EFF_DATE());
	
		setPERSON_STATUS_EFF_DATE(getPERSON_STATUS_EFF_DATE());
	
		setPERSON_NAME(getPERSON_NAME());
	
		setNEXT_DUE_DATE(getNEXT_DUE_DATE());
	
		setDISPLAY_DATE(getDISPLAY_DATE());
	
		setSUB_EXT_DATE(getSUB_EXT_DATE());
	
		setREQ_EFF_DATE(getREQ_EFF_DATE());
	
		setMODE(getMODE());
	
		setPOLICY_ISSUED(getPOLICY_ISSUED());
		
	}


	public void validateForm(FormActionContext ctx) 
	{
	
		FieldCheckCustom.validateRequired(this.getSUB_EFF_DATE(), ctx, "Start Date");
		
		if (!ctx.hasErrors())
		{
			FieldCheckCustom.validateStartDatePersonDate( this.getPERSON_STATUS_EFF_DATE(), this.getSUB_EFF_DATE(), ctx, "Start Date");
		}
			
		if (!ctx.hasErrors())
		{
			FieldCheckCustom.validateStartDatePolicyDate(this.getSTATUS_EFF_DATE(),this.getSUB_EFF_DATE(), ctx, "Start Date");
		}
		
		FieldCheckCustom.validateRequired(this.getSUB_STANDARD_RISK_CODE(), ctx, "Substandard Code");
		
	}
	
	public void clearStdStandardCodes()
	{
		
		setSUB_STANDARD_RISK_CODE("");
		
	}

	public String getCurrentPosition() {
		return currentPosition;
	}

	public void setCurrentPosition(String currentPosition) {
		this.currentPosition = currentPosition;
	}

	
}